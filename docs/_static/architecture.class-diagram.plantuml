@startuml

skinparam class {
  BackgroundColor #ebebeb
  ArrowColor      #333
  BorderColor     #333
}

skinparam lineType ortho

package md.message {
  interface MessageInterface {
    + get_payload() -> typing.Any
  }

  interface SendInterface {
    + send(message: MessageInterface) -> None
  }


  interface ReceiveInterface{
    + receive() -> typing.Iterable[MessageInterface]
    --
    + accept(message: MessageInterface) -> None
    + reject(message: MessageInterface) -> None
  }

  interface HandleInterface {
    + handle(message: MessageInterface) -> None
  }

  class ReceiveApplication {
    - receive_message: ReceiveInterface
    - handle_message: HandleInterface
    - retry_message_exception: typing.Tuple[typing.Union[Exception, type]]
    ---
    + run() -> None
  }
}


SendInterface -- MessageInterface : "Sends >"
HandleInterface --- MessageInterface : "Handles >"
ReceiveInterface -- MessageInterface : "Receives >"

ReceiveApplication *-> ReceiveInterface
ReceiveApplication *-> HandleInterface

@enduml
